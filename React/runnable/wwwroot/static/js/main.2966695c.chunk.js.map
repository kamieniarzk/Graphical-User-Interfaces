{"version":3,"sources":["components/calendar.js","components/day.js","components/event.js","App.js","index.js"],"names":["withRouter","props","date","match","params","moment","useState","current","setCurrent","today","events","setEvents","useEffect","getEvents","axios","get","then","res","data","JSON","parse","map","el","Date","catch","err","alert","dayNames","weekdaysShort","day","key","className","emptyDays","i","startOf","format","push","days","style","parseInt","month","set","find","year","onClick","e","history","onDayClick","daysInMonth","tableData","dayRows","tableCells","forEach","row","tempRow","slice","length","insertRow","tableRows","d","colSpan","currentDate","subtract","prevMonth","add","nextMonth","evs","ev","id","Id","description","Description","renderedEvents","header","delete","console","error","setDate","setDescription","time","setTime","log","event","preventDefault","getData","post","headers","edit","FormData","onSubmit","type","name","onChange","target","value","defaults","baseURL","App","path","component","Event","Day","Calendar","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2966695c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\"; // just for convenience with time handling\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\nconst Calendar = (props) => {\n  const date = props.match.params.date ? moment(props.match.params.date) : null;\n  const [current, setCurrent] = useState(date || moment());\n  const [today] = useState(moment());\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    getEvents();\n  }, []);\n\n  const getEvents = () => {\n    axios\n      .get(`/api/all/`)\n      .then((res) => res.data.data)\n      .then((data) => JSON.parse(data))\n      .then((data) => {\n        const events = data.map((el) => moment(el.Date));\n        setEvents(events);\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n\n  const year = () => {\n    return current.format(\"Y\");\n  };\n\n  const month = () => {\n    return current.format(\"MMMM\");\n  };\n\n  const daysInMonth = () => {\n    return current.daysInMonth();\n  };\n\n  const currentDay = () => {\n    return parseInt(today.format(\"D\"));\n  };\n\n  const firstDayIndex = () => {\n    return moment(current).startOf(\"month\").format(\"d\"); // returns the index of first day of the month (0 - Sun, 1 - Mon ... 6 - Sat)\n  };\n\n  const nextMonth = () => {\n    let currentDate = moment(current).add(1, \"month\");\n    setCurrent(currentDate);\n  };\n\n  const prevMonth = () => {\n    let currentDate = moment(current).subtract(1, \"month\");\n    setCurrent(currentDate);\n  };\n\n  const onDayClick = (e, date) => {\n    props.history.push(`/day/${date}`);\n  };\n\n  let dayNames = moment.weekdaysShort().map((day) => {\n    return (\n      <td key={day} className=\"week-day\">\n        {day}\n      </td>\n    );\n  });\n\n  let emptyDays = []; // number of empty cells in the calendar table before the 1st day of the month\n  for (let i = 0; i < firstDayIndex(); i++) {\n    emptyDays.push(\n      // to prevent key duplicates i * 100\n      <td key={i * 87} className=\"day-empty\">\n        {\"\"}\n      </td>\n    );\n  }\n\n  let days = []; // table cells with the actual days (numbers)\n  for (let i = 1; i <= daysInMonth(); i++) {\n    let style =\n      i === currentDay() && current.month() === today.month()\n        ? \"day-current\" // checking if given day is the current date\n        : \"day\";\n    const day = moment(current);\n    day.set(\"date\", i);\n    if (\n      events.find((el) => el.format(\"DD-MM-YYYY\") === day.format(\"DD-MM-YYYY\"))\n    ) {\n      style += \" day-event\"; // styling the days with events\n    }\n    let date = moment([\n      parseInt(current.year()),\n      parseInt(current.month()),\n      i,\n    ]).format(\"YYYY-MM-DD\");\n    days.push(\n      <td\n        key={i}\n        className={style}\n        onClick={(e) => {\n          onDayClick(e, date);\n        }}\n      >\n        <span>{i}</span>\n      </td>\n    );\n  }\n\n  var tableData = [...emptyDays, ...days];\n  let dayRows = [];\n  let tableCells = [];\n\n  // slicing all the data into rows of 7\n  tableData.forEach((row, i) => {\n    if (i % 7 !== 0) {\n      tableCells.push(row);\n    } else {\n      let tempRow = tableCells.slice();\n      dayRows.push(tempRow);\n      tableCells = [];\n      tableCells.push(row);\n    }\n    if (i === tableData.length - 1) {\n      let insertRow = tableCells.slice();\n      dayRows.push(insertRow);\n    }\n  });\n\n  let tableRows = dayRows.map((d, i) => {\n    return <tr key={i * 100}>{d}</tr>; // to prevent key duplicates i * 100\n  });\n\n  return (\n    <div className=\"calendar\">\n      <table className=\"calendar-table\">\n        <thead>\n          <tr className=\"calendar-header\">\n            <td colSpan=\"1\" className=\"nav-month\">\n              <i\n                className=\"arrow prev fa fa-fw fa-chevron-left\"\n                onClick={(e) => {\n                  prevMonth();\n                }}\n              ></i>\n            </td>\n            <td colSpan=\"5\" className=\"month-label\">\n              {month() + \" \" + year()}\n            </td>\n            <td className=\"nav-month\">\n              <i\n                className=\"arrow prev fa fa-fw fa-chevron-right right-icon\"\n                onClick={(e) => {\n                  nextMonth();\n                }}\n              ></i>\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>{dayNames}</tr>\n          {tableRows}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default withRouter(Calendar);\n","import axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nfunction Day(props) {\n  const [events, setEvents] = useState([]);\n  const date = moment(props.match.params.date).format(\"YYYY-MM-DD\");\n\n  const getEvents = () => {\n    axios\n      .get(`/api/events/${date}`)\n      .then((data) => data.data.data)\n      .then((data) => JSON.parse(data))\n      .then((data) => {\n        const evs = data.map((ev) => {\n          return {\n            id: ev.Id,\n            description: ev.Description,\n            date: moment(ev.Date),\n          };\n        });\n        setEvents(evs);\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n\n  const deleteEvent = (id) => {\n    axios\n      .delete(`/api/delete/${id}`)\n      .then(() => {\n        getEvents();\n      })\n      .catch((err) => console.error(err));\n  };\n\n  // Getting events as component mounts\n  useEffect(() => {\n    getEvents();\n  }, []);\n\n  var renderedEvents = [];\n  var header = [];\n  if (events.length > 0) {\n    renderedEvents = events.map(\n      (el, i) => (\n        <tr key={i}>\n          <td>{el.date.format(\"HH:mm\")}</td>\n          <td key={i * 3}>{el.description}</td>\n          <td>\n            <button\n              className=\"right-icon button-blue\"\n              onClick={() => props.history.push(`/event/edit/${el.id}`)}\n            >\n              Edit\n            </button>\n          </td>\n          <td>\n            <button className=\"button-red\" onClick={() => deleteEvent(el.id)}>\n              Delete\n            </button>\n          </td>\n        </tr>\n      ),\n      (header = (\n        <tr className=\"events-header\">\n          <td>Time</td>\n          <td>Description</td>\n        </tr>\n      ))\n    );\n  } else\n    header = (\n      <tr>\n        <td className=\"events-header\">There are no events on that day!</td>\n      </tr>\n    );\n\n  return (\n    <div>\n      <h1 className=\"day-header\"> {date} </h1>\n\n      <table className=\"events-day\">\n        <thead>{header}</thead>\n        <tbody>{renderedEvents}</tbody>\n      </table>\n      <div className=\"buttons\">\n        <button\n          className=\"button-green\"\n          onClick={() => props.history.push(`/event/add/${date}`)}\n        >\n          Add new\n        </button>\n\n        <button\n          className=\"button-red\"\n          onClick={() => props.history.push(`/home/${date}`)}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Day);\n","import axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nfunction Event(props) {\n  const [date, setDate] = useState(\n    moment(props.match.params.date).format(\"YYYY-MM-DD\")\n  );\n  const id = props.match.params.id;\n  const [description, setDescription] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (id != null) return edit(event);\n    return add(event);\n  };\n  const getEvent = () => {\n    axios\n      .get(`/api/event/${id}`)\n      .then((data) => data.data.data)\n      .then((data) => JSON.parse(data))\n      .then((data) => {\n        setDescription(data.Description);\n        setTime(moment(data.Date).format(\"hh:mm\"));\n        setDate(\n          moment(data.Date.slice(0, 10), \"YYYY-MM-DD\").format(\"YYYY-MM-DD\")\n        );\n        console.log(\n          \"slice = \" + moment(data.Date.slice(0, 10)).format(\"YYYY-MM-DD\")\n        );\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n\n  useEffect(() => {\n    if (id != null) getEvent();\n  }, []);\n\n  const add = (event) => {\n    event.preventDefault();\n    let data = getData();\n    console.log(data.date);\n    axios\n      .post(`/api/add/`, data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((data) => {\n        props.history.push(`/day/${date}`);\n      })\n      .catch((err) => {\n        alert(`error occured`);\n        props.history.push(\"/home\");\n      });\n  };\n\n  const edit = (event) => {\n    event.preventDefault();\n    let data = getData();\n    console.log(data.date);\n    axios\n      .post(`/api/edit/`, data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((data) => {\n        props.history.push(`/day/${date}`);\n      })\n      .catch((err) => {\n        alert(`error occured`);\n        props.history.push(\"/home\");\n      });\n  };\n\n  const setT = (event) => {\n    setTime(event.target.value);\n  };\n  const setDsc = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const getData = () => {\n    let data = new FormData();\n    data.set(\"date\", moment(date + \" \" + time).format(\"YYYY-MM-DDThh:mm\"));\n    data.set(\"description\", description);\n    data.set(\"id\", id);\n    return data;\n  };\n\n  return (\n    <div className=\"event-edit\">\n      <form onSubmit={handleSubmit}>\n        <label className=\"input-label\">Description:</label>\n        <input\n          type=\"text\"\n          name=\"description\"\n          onChange={setDsc}\n          value={description}\n        />\n        <label className=\"input-label\">Time:</label>\n        <input type=\"time\" name=\"time\" onChange={setT} value={time} />\n        <div className=\"buttons\">\n          <button className=\"button-green\" type=\"submit\">\n            Submit\n          </button>\n          <button\n            className=\"button-red\"\n            type=\"button\"\n            onClick={() => props.history.push(`/day/${date}`)}\n          >\n            Close\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default withRouter(Event);\n","import React from \"react\";\nimport Calendar from \"./components/calendar\";\nimport Day from \"./components/day\";\nimport Event from \"./components/event\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:5000/\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/event/add/:date\" component={Event} />\n          <Route path=\"/event/edit/:id\" component={Event} />\n          <Route path=\"/day/:date\" component={Day} />\n          <Route path=\"/home/:date\" component={Calendar} />\n          <Route path=\"/\" exact component={Calendar} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}